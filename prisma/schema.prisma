// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum TaskStatus {
  todo
  in_progress
  done
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id  String @id @default(cuid())
  email String @unique
  name String
  password String
  projects Project[]
  logs Log[]
  tasks Task[]
  issues Issue[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project{
  id String @id @default(cuid())
  description String?
  name String
  owner User @relation(fields: [ownerId], references: [id])
  ownerId String
  tasks Task[]
  logs Log[]
  issues Issue[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task{
  id String @id @default(cuid())
  title String
  status TaskStatus // 'todo', 'in_progress', 'done'
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  assignee User @relation(fields: [assigneeId], references: [id])
  assigneeId String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Log{
  id String @id @default(cuid())
  content String //markdown
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Issue{
  id String @id @default(cuid())
  title String
  description String
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}